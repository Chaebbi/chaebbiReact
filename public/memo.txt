메인컬러 ====> #c6ddcf == rgba(198,221,207,255)
===> rgba(198,221,207,0.3)

border default ====> 1px solid #e6e6e6;
border hover ====> 1px solid #868e96;
border focus ====> 1px solid #398234;

button default ====> #398234;
button hover ====> #0d5f07;

text default - h1 ====> #000;
text hn ====> #495057;


회색
1. #f8f9fa (매우연함)
2. #f1f3f5
3. #e9ecef
4. #868e96

배경색으로 나쁘지 않을듯 : #F9F7F4; 연베이지
진한 초록색 #30573F;

=======================================
=======================================
API FRAME


const  =()=>{
        axios.post("https://spring.chaebbiserver.shop/api/",{
            
        },
        { headers : { Authorization: `Bearer ${localStorage.getItem('token')}`}}
        ).then(function(response) {
            console.log(response.data);
            
        }).catch(function(error) {
            console.log(error);
        });
    }

조건부 렌더링위한 삼항연산 프레임=======================
{   ?

    :
                
    }



    {
            text: name,
            calory: String(calory),
            carb:  String(carb),
            protein:  String(protein),
            fat:  String(fat),
            amount: parseFloat(amount),
            meal: Number(meal),
            rdate: dateform,
            rtime: time24
        }

==========================================

=======================================
=======================================

                    {Array.from(items).map(portfolio => (
                        <div> </div>
                    ))}     


<페이지 프레임>
import styled from "styled-components";
import { useState } from "react";

//페이지 설명
function (){

    return(
        <>
        
        </>
        )
    }


export default ;




return(

        <>
        
        {problemTable.map((p,index)=>{
                <p>{p.problemId}</p>
        })}
        <ul id={styles.accordionContainer}>
            {/* {Array.from(probStorage).map(prob => prob.map((p,index)=>{
                <li>{p.foodName}</li>
            }))} */}
            {problemTable.map((p,index)=>{
                <li>{p}</li>
             })}
            {/* {Array.from(probStorage).map((p,index)=>{ 
            //     <li key={index}>
            //         {/* <label htmlFor={`${p.problemId}`}>  {problemTable[p.problemId-1]}   <span>&#x3e;</span></label> */}
                     {/* <label htmlFor={`${p[0].problemId}`}>{p[0].problemId}</label>
                     <input type="checkbox" name="suggest" id={`${p[0].problemId}`}/> */}
                     {/* <div className={styles.content}>
            //             {Array.from(p[0]).map((s,index) => (
            //                 <div key={index}>
            //                     <Image
            //                         src={s.foodUrl}
            //                         width="100%"
            //                         height="100px"
            //                     />
            //                     <h3>{s.foodName}</h3>
            //                 </div>
            //             ))}    
            //         </div> */}
                 {/* </li> */}
            {/* // })} */}
            {/* <li>
                <label htmlFor="first">
                    {problemTable[problemList[0].problemId-1]}
                    <span>&#x3e;</span>
                </label>
                <input type="checkbox" name="accordion" id="first"/>
                <div className={styles.content}>
                    {Array.from(firstProb).map((s,index) => (
                        <div key={index}>
                            <Image
                                src={s.foodUrl}
                                width="100%"
                                height="100px"
                            />
                            <h3>{s.foodName}</h3>
                        </div>
                    ))}    
                </div>
            </li> */}
            <li>
                <label htmlFor="second">식습관 문제명2 <span>&#x3e;</span></label>
                <input type="checkbox" name="accordion" id="second"/>
                <div className={styles.content}>
                    <p>부모 컨테이너는 그리드, 자식은 3개의 이미지 블록
                    부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````
                    </p>
                </div>
            </li>
            <li>
                <label htmlFor="third">식습관 문제명3 <span>&#x3e;</span></label>
                <input type="checkbox" name="accordion" id="third"/>
                <div className={styles.content}>
                    <p>부모 컨테이너는 그리드, 자식은 3개의 이미지 블록
                    부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````부모 컨테이너는 그리드, 자식은 3개의 이미지 블록~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                        ``````````````````````
                    </p>
                </div>
            </li>
        </ul>
        </>
        )
    }


{Array.from(myPosts).map((p,index)=>{
                        console.log(p.content);
                        <div key={index}>
                            <h3>
                                <Link to={`/detail/${p.postIdx}`}>
                                    {p.title}
                                </Link>
                            </h3>
                            <p>{p.createdAt}</p>
                            <p>{p.content}(길이제한)</p>
                        </div>
                    })}
